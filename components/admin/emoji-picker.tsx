"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Popover, PopoverContent, PopoverTrigger } from "@/components/ui/popover"
import { Input } from "@/components/ui/input"

// –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–µ —ç–º–æ–¥–∑–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
const COMMON_EMOJIS = {
  smileys: ["üòÄ", "üòÉ", "üòÑ", "üòÅ", "üòÜ", "üòÖ", "üòÇ", "ü§£", "üòä", "üòá", "üôÇ", "üôÉ", "üòâ", "üòå", "üòç", "ü•∞", "üòò"],
  people: ["üë∂", "üëß", "üßí", "üë¶", "üë©", "üßë", "üë®", "üëµ", "üßì", "üë¥", "üëÆ", "üïµÔ∏è", "üë∑", "üë∏", "ü§¥", "üë≥"],
  animals: ["üê∂", "üê±", "üê≠", "üêπ", "üê∞", "ü¶ä", "üêª", "üêº", "üê®", "üêØ", "ü¶Å", "üêÆ", "üê∑", "üê∏", "üêµ", "üêî"],
  food: ["üçè", "üçé", "üçê", "üçä", "üçã", "üçå", "üçâ", "üçá", "üçì", "üçà", "üçí", "üçë", "ü•≠", "üçç", "ü••", "ü•ù", "üçÖ"],
  activities: ["‚öΩ", "üèÄ", "üèà", "‚öæ", "ü•é", "üéæ", "üèê", "üèâ", "ü•è", "üé±", "üèì", "üè∏", "üèí", "üèë", "ü•ç", "üèè"],
  travel: ["üöó", "üöï", "üöô", "üöå", "üöé", "üèéÔ∏è", "üöì", "üöë", "üöí", "üöê", "üöö", "üöõ", "üöú", "üõ¥", "üö≤", "üõµ"],
  objects: ["‚åö", "üì±", "üíª", "‚å®Ô∏è", "üñ•Ô∏è", "üñ®Ô∏è", "üñ±Ô∏è", "üñ≤Ô∏è", "üïπÔ∏è", "üóúÔ∏è", "üíΩ", "üíæ", "üíø", "üìÄ", "üìº", "üì∑"],
  symbols: ["‚ù§Ô∏è", "üß°", "üíõ", "üíö", "üíô", "üíú", "üñ§", "ü§ç", "ü§é", "üíî", "‚ù£Ô∏è", "üíï", "üíû", "üíì", "üíó", "üíñ"],
}

interface EmojiPickerProps {
  selectedEmoji: string
  onEmojiSelect: (emoji: string) => void
}

export function EmojiPicker({ selectedEmoji, onEmojiSelect }: EmojiPickerProps) {
  const [searchTerm, setSearchTerm] = useState("")
  const [activeCategory, setActiveCategory] = useState<keyof typeof COMMON_EMOJIS>("smileys")

  const categories = Object.keys(COMMON_EMOJIS) as Array<keyof typeof COMMON_EMOJIS>

  const filteredEmojis = searchTerm.trim()
    ? Object.values(COMMON_EMOJIS)
        .flat()
        .filter((emoji) => emoji.includes(searchTerm.toLowerCase()))
    : COMMON_EMOJIS[activeCategory]

  const categoryNames: Record<keyof typeof COMMON_EMOJIS, string> = {
    smileys: "–°–º–∞–π–ª–∏–∫–∏",
    people: "–õ—é–¥–∏",
    animals: "–ñ–∏–≤–æ—Ç–Ω—ã–µ",
    food: "–ï–¥–∞",
    activities: "–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏",
    travel: "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
    objects: "–û–±—ä–µ–∫—Ç—ã",
    symbols: "–°–∏–º–≤–æ–ª—ã",
  }

  return (
    <Popover>
      <PopoverTrigger asChild>
        <Button variant="outline" className="w-full justify-start text-left font-normal">
          <span className="mr-2 text-2xl">{selectedEmoji}</span>
          <span>–í—ã–±–µ—Ä–∏—Ç–µ —ç–º–æ–¥–∑–∏</span>
        </Button>
      </PopoverTrigger>
      <PopoverContent className="w-80">
        <div className="space-y-4">
          <Input
            placeholder="–ü–æ–∏—Å–∫ —ç–º–æ–¥–∑–∏..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="mb-2"
          />

          {!searchTerm && (
            <div className="flex flex-wrap gap-2 mb-2">
              {categories.map((category) => (
                <Button
                  key={category}
                  variant={activeCategory === category ? "default" : "outline"}
                  size="sm"
                  onClick={() => setActiveCategory(category)}
                  className="text-xs"
                >
                  {categoryNames[category]}
                </Button>
              ))}
            </div>
          )}

          <div className="grid grid-cols-8 gap-2">
            {filteredEmojis.map((emoji, index) => (
              <Button
                key={`${emoji}-${index}`}
                variant="ghost"
                className="h-8 w-8 p-0"
                onClick={() => {
                  onEmojiSelect(emoji)
                  setSearchTerm("")
                }}
              >
                <span className="text-lg">{emoji}</span>
              </Button>
            ))}
          </div>

          {filteredEmojis.length === 0 && (
            <p className="text-center text-sm text-muted-foreground">–≠–º–æ–¥–∑–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
          )}
        </div>
      </PopoverContent>
    </Popover>
  )
}

